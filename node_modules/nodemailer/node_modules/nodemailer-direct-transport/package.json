{
  "_args": [
    [
      "nodemailer-direct-transport@https://registry.npmjs.org/nodemailer-direct-transport/-/nodemailer-direct-transport-3.1.0.tgz",
      "/Users/jordenchamid/com.synology.surveillance/node_modules/nodemailer"
    ]
  ],
  "_from": "nodemailer-direct-transport@3.1.0",
  "_id": "nodemailer-direct-transport@3.1.0",
  "_inCache": true,
  "_location": "/nodemailer/nodemailer-direct-transport",
  "_phantomChildren": {},
  "_requested": {
    "name": "nodemailer-direct-transport",
    "raw": "nodemailer-direct-transport@https://registry.npmjs.org/nodemailer-direct-transport/-/nodemailer-direct-transport-3.1.0.tgz",
    "rawSpec": "https://registry.npmjs.org/nodemailer-direct-transport/-/nodemailer-direct-transport-3.1.0.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/nodemailer-direct-transport/-/nodemailer-direct-transport-3.1.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/nodemailer"
  ],
  "_resolved": "https://registry.npmjs.org/nodemailer-direct-transport/-/nodemailer-direct-transport-3.1.0.tgz",
  "_shasum": "308b6f4c16000a3af1af1bb49eafd6a0b2747b62",
  "_shrinkwrap": null,
  "_spec": "nodemailer-direct-transport@https://registry.npmjs.org/nodemailer-direct-transport/-/nodemailer-direct-transport-3.1.0.tgz",
  "_where": "/Users/jordenchamid/com.synology.surveillance/node_modules/nodemailer",
  "author": {
    "name": "Andris Reinman"
  },
  "bugs": {
    "url": "https://github.com/andris9/nodemailer-direct-transport/issues"
  },
  "dependencies": {
    "nodemailer-shared": "1.0.5",
    "smtp-connection": "2.5.0"
  },
  "description": "Direct transport for Nodemailer",
  "devDependencies": {
    "chai": "^3.5.0",
    "grunt": "^1.0.1",
    "grunt-eslint": "^18.1.0",
    "grunt-mocha-test": "^0.12.7",
    "mocha": "^2.4.5",
    "smtp-server": "^1.9.1"
  },
  "homepage": "http://github.com/andris9/nodemailer-direct-transport",
  "keywords": [
    "Nodemailer",
    "SMTP"
  ],
  "license": "MIT",
  "main": "lib/direct-transport.js",
  "name": "nodemailer-direct-transport",
  "optionalDependencies": {},
  "readme": "# Direct SMTP transport module for Nodemailer\n\nApplies for Nodemailer v1.x and not for v0.x where transports are built-in.\n\n## Usage\n\nInstall with npm\n\n    npm install nodemailer-direct-transport\n\nRequire to your script\n\n```javascript\nvar nodemailer = require('nodemailer');\nvar directTransport = require('nodemailer-direct-transport');\n```\n\nCreate a Nodemailer transport object\n\n```javascript\nvar transporter = nodemailer.createTransport(directTransport(options))\n```\n\nWhere\n\n  * **options** defines connection data\n    * **options.name** hostname to be used when introducing the client to the MX server\n    * **options.logger** optional [bunyan](https://github.com/trentm/node-bunyan) compatible logger instance. If set to `true` then logs to console. If value is not set or is `false` then nothing is logged\n    * **options.debug** if set to true, then logs SMTP traffic, otherwise logs only transaction events\n    * **options.port** optional port to use for connecting to MX servers (defaults to MTA standard 25)\n    * **options.retryDelay** optional timeout in ms for retrying failed messages (defaults to 15 minutes)\n    * **getSocket** optional method that is called every time a new connection is made against the SMTP server. This method can provide an existing socket to be used instead of creating a new one\n\n**Example**\n\n```javascript\nvar transport = nodemailer.createTransport(directTransport({\n    name: 'smtp.example.com' // should be the hostname machine IP address resolves to\n}));\n```\n\n## send callback\n\nSend callback includes the following arguments\n\n  * **error** if the mail was not sent\n    * **error.errors** is an array of error responses (one response for one MX exchange)\n      * **error.errors[].recipients** an array of failed recipients\n      * **error.errors[].response** Error response from the SMTP server\n  * **info** if at least one mail was sent or is pending\n    * **info.accepted** an array of recipients that were accepted\n    * **info.rejected** an array of recipients that were rejected\n    * **info.pending** an array of pending recipient objects (messages that were not rejected permanently and are retried later)\n      * **info.pending[].recipients** an array of recipient addresses that are still pending\n      * **info.pending[].response** Response from the SMTP server\n    * **info.errors** An array of errors (for these exhanges that rejected mail)\n\n## Issues\n\nDirect transport is very inefficient as it queues all e-mails to be sent into memory. Additionally, if a message is not yet sent and the process is closed, all data about queued messages is lost. Thus direct transport is only suitable for low throughput systems, where the message can be processed immediately.\n\nWhile not being 100% reliable (remember - if process exits, entire queue is lost), direct transport can still handle sending errors, graylisting and such. If a message can not be sent, it is re-queued and retried later.\n\n## License\n\n**MIT**\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/andris9/nodemailer-direct-transport.git"
  },
  "scripts": {
    "test": "grunt"
  },
  "version": "3.1.0"
}
